FORMAT: 1A
HOST: http://www.google.com

#### Twistory
Twistory API gives access to real world **Twitter data** and view _trending events_ 

# Group Handles
Twitter Handle resources are people/entities that are actively engaged on twitter 

## Handle Collection [/handles]
### List the id, tweeter identifier, and name of all Handle [GET]
+ Response 200 (application/json)

        [{
         "id": 1, "name": "KingJames",
        }, {
         "id": 2, "name": "kobebryant",
        }]



## Detailed info of each id [/handles/{handle_id}]

+ Parameters
    + id (required, integer) ... This is the id of the desired handle

    
### Detailed info of the handle with the given id [GET]
+ Response 200 (application/json)

        [{
         "id": 1, "name": "KingJames", 
         "tweets": "website of the person's tweeter account",
         "bio": " string content"
         
        }]



    
# Group Hashtags
Hashtags are markers that denote a specific tweet

## HashTags Collection [/hashtags]
### List the id and name of all hashtags [GET]
+ Response 200 (application/json)

        [{
         "id": 1, "name": "HeatsVsSpurs"
        }, {
         "id": 2, "name": "WorldCup" 
        }]


## Detailed info of each hashtag [/hashtags/{hashtag_id}]

+ Parameters
    + id (required, integer) ... this is the id of hashtags

### List all info of a certain hashtag [GET]
+ Response 200 (application/json)

        [{
         "id": 1, "name": "HeatsVsSpurs", "description" : "NBA final" 
         } ]


# Group Clusters
Clusters are groupings of handles and hashtags that all relate to a single specific topic


## Clusters Collection [/clusters]
### List the id and name of all cluster [GET]
+ Response 200 (application/json)

        [{
         "id": 1, "name": "MiamiHeat"
        }, {
         "id": 2, "name": "Germany"
        }]



## Detailed info of each cluster [/clusters/{cluster_id}]

+ Parameters
    + id (required, integer) ... this is the id of the wanted cluster

### List all info of a certain hashtag [GET]
+ Response 200 (application/json)

        [{
         "id": 1, "name": "MiamiHeat", "description": "NBA Basketball team"
        }]


